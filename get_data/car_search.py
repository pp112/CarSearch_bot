import re
from get_data.get_data_car import get_data_car
from get_data.get_price_car import get_price_car
from database.database_cars import add_data_db, get_data_db


async def search_car_number(carplate: str) -> dict:
    carplate = carplate.replace(" ", "").upper()
    pattern = r"^[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]\d{3}[–ê–í–ï–ö–ú–ù–û–†–°–¢–£–•]{2}\d{2,3}$"
    if not re.fullmatch(pattern, carplate):
        message = "‚ö†Ô∏è –ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n\n‚úÖ –ü—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä–∞: <b>–ê123–ê–ê145</b>\n\nüîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        return message

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–æ–º–µ—Ä–∞ –≤ –±–∞–∑–µ
    result = await get_data_db(carplate)
    if not result:
        # –ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –º–∞—à–∏–Ω—ã
        result = await get_data_car(number_car=carplate)
        if result:
            await add_data_db(result)
        else:
            message = "üòî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—é"
            return message
        
    # –ò—â–µ–º —Ü–µ–Ω—ã 
    result_dict_with_price = await get_price_car(result)
    if "min_price" in result_dict_with_price:
        return result_dict_with_price
    
    return result


if __name__ == "__main__":
    import asyncio
    result = asyncio.run(search_car_number("–†381–û–•154"))
    print(result)
        
